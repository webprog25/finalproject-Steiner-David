Final Project Milestone
==============================

Project Title: Plant Pal
Your Name: David Steiner

Overview
--------
I have implemented the frontend interface including a responsive grid of plant cards, sample data, add-plant form, and date‐difference logic for watering deadlines. Due to limited time, only the frontend has been implemented

Project Changes
---------------
No major changes to the original proposal; the core scope remains the same. 

Implementation Details
----------------------
* Responsive grid of plant cards showing photo, nickname, species, and watering status that updates as thresholds approach.
* Store plant data in MongoDB
* Add Plant form: allow uploading or pasting an image, entering species and watering frequency (days) and saving via fetch calls to the backend API, which persists to MongoDB.
* Watering logic: use date-fns to calculate “days until next watering” based on last watered date and frequency; update UI dynamically on load or at intervals.
* Mark as watered: send a PUT request to update the lastWatered date in MongoDB, then refresh the display.
* Edit and delete: allow updating plant details or removing a plant by sending PUT/DELETE requests to the API, which updates the MongoDB collection.

External libraries and code
---------------------------
Same as in the proposal:
* date‑fns – lightweight helper for “days until dry” math.  
* Chart.js – optional, only if I add a future watering‑history chart.
* Google Identity Services – optional stretch goal for one‑tap sign‑in.  

Collaboration and resources
---------------------------
Same as in the proposal:
* OpenFarm plant‑info API (read‑only) if I add species autofill.  
* Feedback from a few plant‑owner friends to test usability.

Anything else?
--------------
